const loaderUtils = require('loader-utils');

module.exports = function() {
  const { remote, resource } = loaderUtils.getOptions(this) || {};

  return `
    //############################ NOTICE ############################//
    //                                                                //
    //           This is a placeholder module generated by            //
    //                 lazy-compile-webpack-plugin.                   //
    //     https://github.com/liximomo/lazy-compile-webpack-plugin    //
    //                                                                //
    //    The real content is in the corresponding hot-update file.   //
    //           You won't see this after the page refresh.           //
    //                                                                //
    //################################################################//



    // http://paulirish.com/2011/requestanimationframe-for-smart-animating/
    // http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating
    // requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel
    // MIT license
    (function() {
        var lastTime = 0;
        var vendors = ['ms', 'moz', 'webkit', 'o'];
        for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
            window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];
            window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame'] 
                                        || window[vendors[x]+'CancelRequestAnimationFrame'];
        }
      
        if (!window.requestAnimationFrame)
            window.requestAnimationFrame = function(callback, element) {
                var currTime = new Date().getTime();
                var timeToCall = Math.max(0, 16 - (currTime - lastTime));
                var id = window.setTimeout(function() { callback(currTime + timeToCall); }, 
                  timeToCall);
                lastTime = currTime + timeToCall;
                return id;
            };
      
        if (!window.cancelAnimationFrame)
            window.cancelAnimationFrame = function(id) {
                clearTimeout(id);
            };
    }());

    var originTitle = document.title;
    // modified from https://matthewrayfield.com/articles/animating-urls-with-javascript-and-emojis
    var f = ['🕐','🕑','🕒','🕓','🕔','🕕','🕖','🕗','🕘','🕙','🕚','🕛'];
    var loopHandle;
    function loop() {
      loopHandle = requestAnimationFrame(loop);
      document.title = 'Compiling ' + f[Math.floor((Date.now() / 100) % f.length)];
    }
    loop();

    module.exports = {
      then(resolve) {
        if (module.hot) {
          module.hot.dispose(function() {
            cancelAnimationFrame(loopHandle);
            document.title = originTitle;

            // wait for the module to install
            setTimeout(() => {
              // depressed warning: "unexpected require from disposed module"
              module.hot.active = true;
              resolve(__webpack_require__(module.id));
              module.hot.active = false;
             }, 0);
          });
          module.hot.accept(function() {
            // error handle
          });
        }

        var img = new Image();
        img.src = "${remote}?resource=${encodeURIComponent(resource)}";
      }
    }
  `;
};
